/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     cfdemSolverVoFCyclic;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         1;

deltaT          4e-6;

writeControl    adjustableRunTime;

writeInterval   0.002;

purgeWrite      0;

writeFormat     binary;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  no;

maxCo           0.4;
maxAlphaCo      0.4;

maxDeltaT       1;

// libs (   
         // "libfvOptionsCFDEM.so" 
         // "libsimpleFunctionObjects.so"
         // "libsimpleSwakFunctionObjects.so" 
     // );

DimensionedConstants
{
    unitSet             CGS; // SI; // USCS; // 

    CGSCoeffs
    {
        universal
        {
            c               c [ 0 1 -1 0 0 0 0 ] 2.99792e+10; // speed of light in vacuum (cm/s)
            G               G [ -1 3 -2 0 0 0 0 ] 6.67429e-8; // gravitational constant (cm^3/(gs^2))
            h               h [ 1 2 -1 0 0 0 0 ] 6.62607e-27; // Planck's constant (erg.s)
        }
        electromagnetic
        {
            e               e [ 0 0 1 0 0 1 0 ] 4.803204e-10; // elementary charge (statcoulomb)
        }
        atomic
        {
            me              me [ 1 0 0 0 0 0 0 ] 9.10938e-28; // electron mass (g)
            mp              mp [ 1 0 0 0 0 0 0 ] 1.67262e-24; // proton mass (g)
        }
        physicoChemical
        {
            mu              mu [ 1 0 0 0 0 0 0 ] 1.66054e-24; // atomic mass unit (g)
            k               k [ 1 2 -2 -1 0 0 0 ] 1.38065e-16; // Boltzman constant (erg/K)
        }
        standard
        {
            //- Standard pressure [bar]
            Pstd            Pstd [ 1 -1 -2 0 0 0 0 ] 1000000; // 1 bar (barye)
            //- Standard temperature [degK]
            Tstd            Tstd [ 0 0 0 1 0 0 0 ] 298.15; // should be same as in SI unit system
        }
    }
}

// functions
// {
	// bubbleVelocity
	// {
			// type         swakExpression;
			// valueType    internalField;
            // verbose      false;
			// aliases     {alphaW alpha.water;}
			// variables    (
			               // "thres=0.5;"
						   // "gasVol=sum(alphaW<=thres ? vol() : 0);"
						   // "Ub=alphaW<=thres ? U.z : 0;"
						 // );
			// expression   "Ub*vol()/gasVol";
			// accumulations (sum);
			// outputControlMode timeStep;
			// outputInterval 100;
	// }
	// gasVolume
	// {
	    // $bubbleVelocity;
		// expression "vol()*(1-alphaW)";
		// accumulations (sum);
		// outputControlMode timeStep;
		// outputInterval 100;
	// }
// }

// ************************************************************************* //
